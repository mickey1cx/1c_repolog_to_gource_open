Перем Лог1С;
Перем Результат;
Перем ПропуститьПервуюВерсию;
Перем ДатаНачалоUnixTime;

Функция UnixTime(Дата1С)
	Возврат Строка(Дата1С - ДатаНачалоUnixTime);
КонецФункции

Функция ДатаКоммита(СоставВерсии)

	Возврат Дата(
		СоставВерсии[5].Значение + 
		СоставВерсии[4].Значение +
		СоставВерсии[3].Значение
	) + Число(СоставВерсии[6].Значение) * 3600 +
	Число(СоставВерсии[7].Значение) * 60 + 
	Число(СоставВерсии[8].Значение);

КонецФункции

Функция СтруктураКоммита(СоставВерсии)

	Возврат Новый Структура("МеткаВремени, Пользователь",
	UnixTime(ДатаКоммита(СоставВерсии)),
	СоставВерсии[2].Значение);

КонецФункции

Функция ЦветовоеОформлениеОбъекта(ОбъектКоммита)

	Если СтрНачинаетсяС(ОбъектКоммита, "Справочник") Тогда
		Возврат "|1B676B";
	ИначеЕсли СтрНачинаетсяС(ОбъектКоммита, "Документ") Тогда
		Возврат "|519548";
	ИначеЕсли СтрНачинаетсяС(ОбъектКоммита, "РегистрСведений") Тогда
		Возврат "|EAFDE6";
	ИначеЕсли СтрНачинаетсяС(ОбъектКоммита, "РегистрНакопления") Тогда
		Возврат "|88C425";
	Иначе
		Возврат "";
	КонецЕсли;

КонецФункции

Процедура Результат_ВывестиГруппу(СоставКоммита, СтруктураКоммита)

	ТелоКоммита = СокрЛП(СоставКоммита);
	Если ПустаяСтрока(ТелоКоммита) Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ТелоКоммита, "Добавлены") Тогда
		ТипКоммита = "A";
	ИначеЕсли СтрНачинаетсяС(ТелоКоммита, "Изменены") Тогда
		ТипКоммита = "M";
	ИначеЕсли СтрНачинаетсяС(ТелоКоммита, "Удалены") Тогда
		ТипКоммита = "D";
	Иначе
		Сообщить(СтрПолучитьСтроку(ТелоКоммита, 1));
		ВызватьИсключение "Тип коммита неопределен";
	КонецЕсли;

	Для СчетчикСтрок = 2 По СтрЧислоСтрок(ТелоКоммита) Цикл
		ОбъектКоммита = СокрЛП(СтрПолучитьСтроку(ТелоКоммита, СчетчикСтрок));
		ОбъектКоммита = СтрЗаменить(ОбъектКоммита, ".", "/");
		Результат.ДобавитьСтроку(
			СтруктураКоммита.МеткаВремени + "|" +
			СтруктураКоммита.Пользователь + "|" + 
			ТипКоммита + "|" +
			ОбъектКоммита + ЦветовоеОформлениеОбъекта(ОбъектКоммита)
			);
	КонецЦикла;

КонецПроцедуры

Процедура Результат_ДобавитьВерсию(ОписаниеВерсии)

	СоставВерсии = ОписаниеВерсии.Группы;
	СтруктураКоммита = СтруктураКоммита(СоставВерсии);

	Результат_ВывестиГруппу(СоставВерсии[9].Значение, СтруктураКоммита);
	Результат_ВывестиГруппу(СоставВерсии[10].Значение, СтруктураКоммита);
	Результат_ВывестиГруппу(СоставВерсии[11].Значение, СтруктураКоммита);

КонецПроцедуры

Процедура ВыполнитьКонвертацию(Лог1С_ИмяФайла, Результат_ИмяФайла)

	Шаблон = 
	"Версия:\s+(\d+)\s+" +
	"Пользователь:\s+(\S+)\s+" +
	"Дата создания:\s+(\d\d).(\d\d).(\d\d\d\d)\s+" +
	"Время создания:\s+(\d+):(\d\d):(\d\d)\n.*\n" +
	"(\s+Добавлены\s+\d+\n(?:\s+\S+\n)+)*" +
	"(\s+Изменены\s+\d+\n(?:\s+\S+\n)+)*" +
	"(\s+Удалены\s+\d+\n(?:\s+\S+\n)+)*";

	Лог1С = Новый ТекстовыйДокумент;
	Результат = Новый ТекстовыйДокумент;
	Лог1С.Прочитать(Лог1С_ИмяФайла);
	ТелоЛога = Лог1С.ПолучитьТекст();

	Регэксп = Новый РегулярноеВыражение(Шаблон);
	Регэксп.Многострочный = Истина;
	Совпадения = Регэксп.НайтиСовпадения(ТелоЛога);

	ИндексНачало = ?(ПропуститьПервуюВерсию, 1, 0);
	ИндексОкончание = Совпадения.Количество() - 1;

	Для Индекс = ИндексНачало По ИндексОкончание Цикл
		Результат_ДобавитьВерсию(Совпадения[Индекс]);
	КонецЦикла;

	Результат.Записать(Результат_ИмяФайла, "UTF-8");

КонецПроцедуры

ДатаНачалоUnixTime = Дата(1970, 1, 1);
ПропуститьПервуюВерсию = Истина;
ВыполнитьКонвертацию("testlog.txt", "result.log");

// gource -1920x1080 -f --highlight-all-users --multi-sampling --seconds-per-day 1 --auto-skip-seconds 1 result.log